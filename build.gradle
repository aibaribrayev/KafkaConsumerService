plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.protobuf' version '0.8.17'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework:spring-websocket'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    implementation 'io.grpc:grpc-all:1.54.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.7"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.54.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

bootBuildImage {
    imageName = 'aibaribray/kafkaconsumer:docker'
    pullPolicy = 'IF_NOT_PRESENT'
}

tasks.named('test') {
    useJUnitPlatform()
}
